//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: BBox_Dcps.h
//  Source: ssafy_msgs\msg\BBox_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.9.190403OSS
//  
//******************************************************************
#ifndef _BBOX_DCPS_H_
#define _BBOX_DCPS_H_

#include "sacpp_mapping.h"
#include "BBox_.h"
#include "dds_dcps.h"
#include "ssafy_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"


namespace ssafy_msgs
{
   namespace msg
   {
      namespace dds_
      {

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_TypeSupportInterface;

         typedef BBox_TypeSupportInterface * BBox_TypeSupportInterface_ptr;
         typedef DDS_DCPSInterface_var < BBox_TypeSupportInterface> BBox_TypeSupportInterface_var;
         typedef DDS_DCPSInterface_out < BBox_TypeSupportInterface> BBox_TypeSupportInterface_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_DataWriter;

         typedef BBox_DataWriter * BBox_DataWriter_ptr;
         typedef DDS_DCPSInterface_var < BBox_DataWriter> BBox_DataWriter_var;
         typedef DDS_DCPSInterface_out < BBox_DataWriter> BBox_DataWriter_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_DataReader;

         typedef BBox_DataReader * BBox_DataReader_ptr;
         typedef DDS_DCPSInterface_var < BBox_DataReader> BBox_DataReader_var;
         typedef DDS_DCPSInterface_out < BBox_DataReader> BBox_DataReader_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_DataReaderView;

         typedef BBox_DataReaderView * BBox_DataReaderView_ptr;
         typedef DDS_DCPSInterface_var < BBox_DataReaderView> BBox_DataReaderView_var;
         typedef DDS_DCPSInterface_out < BBox_DataReaderView> BBox_DataReaderView_out;

         struct BBox_Seq_uniq_ {};
         typedef DDS_DCPSUVLSeq < BBox_, struct BBox_Seq_uniq_> BBox_Seq;
         typedef DDS_DCPSSequence_var < BBox_Seq> BBox_Seq_var;
         typedef DDS_DCPSSequence_out < BBox_Seq> BBox_Seq_out;
         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_TypeSupportInterface
         :
            virtual public DDS::TypeSupport
         { 
         public:
            typedef BBox_TypeSupportInterface_ptr _ptr_type;
            typedef BBox_TypeSupportInterface_var _var_type;

            static BBox_TypeSupportInterface_ptr _duplicate (BBox_TypeSupportInterface_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BBox_TypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
            static BBox_TypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BBox_TypeSupportInterface_ptr _nil () { return 0; }
            static const char * _local_id;
            BBox_TypeSupportInterface_ptr _this () { return this; }


         protected:
            BBox_TypeSupportInterface () {};
            ~BBox_TypeSupportInterface () {};
         private:
            BBox_TypeSupportInterface (const BBox_TypeSupportInterface &);
            BBox_TypeSupportInterface & operator = (const BBox_TypeSupportInterface &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_DataWriter
         :
            virtual public DDS::DataWriter
         { 
         public:
            typedef BBox_DataWriter_ptr _ptr_type;
            typedef BBox_DataWriter_var _var_type;

            static BBox_DataWriter_ptr _duplicate (BBox_DataWriter_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BBox_DataWriter_ptr _narrow (DDS::Object_ptr obj);
            static BBox_DataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BBox_DataWriter_ptr _nil () { return 0; }
            static const char * _local_id;
            BBox_DataWriter_ptr _this () { return this; }

            virtual DDS::LongLong register_instance (const BBox_& instance_data) = 0;
            virtual DDS::LongLong register_instance_w_timestamp (const BBox_& instance_data, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long unregister_instance (const BBox_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long unregister_instance_w_timestamp (const BBox_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long write (const BBox_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long write_w_timestamp (const BBox_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long dispose (const BBox_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long dispose_w_timestamp (const BBox_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long writedispose (const BBox_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long writedispose_w_timestamp (const BBox_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long get_key_value (BBox_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const BBox_& instance_data) = 0;

         protected:
            BBox_DataWriter () {};
            ~BBox_DataWriter () {};
         private:
            BBox_DataWriter (const BBox_DataWriter &);
            BBox_DataWriter & operator = (const BBox_DataWriter &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_DataReader
         :
            virtual public DDS::DataReader
         { 
         public:
            typedef BBox_DataReader_ptr _ptr_type;
            typedef BBox_DataReader_var _var_type;

            static BBox_DataReader_ptr _duplicate (BBox_DataReader_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BBox_DataReader_ptr _narrow (DDS::Object_ptr obj);
            static BBox_DataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BBox_DataReader_ptr _nil () { return 0; }
            static const char * _local_id;
            BBox_DataReader_ptr _this () { return this; }

            virtual DDS::Long read (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (BBox_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (BBox_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (BBox_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const BBox_& instance) = 0;

         protected:
            BBox_DataReader () {};
            ~BBox_DataReader () {};
         private:
            BBox_DataReader (const BBox_DataReader &);
            BBox_DataReader & operator = (const BBox_DataReader &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs BBox_DataReaderView
         :
            virtual public DDS::DataReaderView
         { 
         public:
            typedef BBox_DataReaderView_ptr _ptr_type;
            typedef BBox_DataReaderView_var _var_type;

            static BBox_DataReaderView_ptr _duplicate (BBox_DataReaderView_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static BBox_DataReaderView_ptr _narrow (DDS::Object_ptr obj);
            static BBox_DataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static BBox_DataReaderView_ptr _nil () { return 0; }
            static const char * _local_id;
            BBox_DataReaderView_ptr _this () { return this; }

            virtual DDS::Long read (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (BBox_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (BBox_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (BBox_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (BBox_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const BBox_& instance) = 0;

         protected:
            BBox_DataReaderView () {};
            ~BBox_DataReaderView () {};
         private:
            BBox_DataReaderView (const BBox_DataReaderView &);
            BBox_DataReaderView & operator = (const BBox_DataReaderView &);
         };

      }
   }
}




#endif
