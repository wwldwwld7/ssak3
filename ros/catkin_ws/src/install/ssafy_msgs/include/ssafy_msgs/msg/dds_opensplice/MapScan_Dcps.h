//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: MapScan_Dcps.h
//  Source: ssafy_msgs\msg\MapScan_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.9.190403OSS
//  
//******************************************************************
#ifndef _MAPSCAN_DCPS_H_
#define _MAPSCAN_DCPS_H_

#include "sacpp_mapping.h"
#include "MapScan_.h"
#include "dds_dcps.h"
#include "ssafy_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"


namespace ssafy_msgs
{
   namespace msg
   {
      namespace dds_
      {

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_TypeSupportInterface;

         typedef MapScan_TypeSupportInterface * MapScan_TypeSupportInterface_ptr;
         typedef DDS_DCPSInterface_var < MapScan_TypeSupportInterface> MapScan_TypeSupportInterface_var;
         typedef DDS_DCPSInterface_out < MapScan_TypeSupportInterface> MapScan_TypeSupportInterface_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_DataWriter;

         typedef MapScan_DataWriter * MapScan_DataWriter_ptr;
         typedef DDS_DCPSInterface_var < MapScan_DataWriter> MapScan_DataWriter_var;
         typedef DDS_DCPSInterface_out < MapScan_DataWriter> MapScan_DataWriter_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_DataReader;

         typedef MapScan_DataReader * MapScan_DataReader_ptr;
         typedef DDS_DCPSInterface_var < MapScan_DataReader> MapScan_DataReader_var;
         typedef DDS_DCPSInterface_out < MapScan_DataReader> MapScan_DataReader_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_DataReaderView;

         typedef MapScan_DataReaderView * MapScan_DataReaderView_ptr;
         typedef DDS_DCPSInterface_var < MapScan_DataReaderView> MapScan_DataReaderView_var;
         typedef DDS_DCPSInterface_out < MapScan_DataReaderView> MapScan_DataReaderView_out;

         struct MapScan_Seq_uniq_ {};
         typedef DDS_DCPSUFLSeq < MapScan_, struct MapScan_Seq_uniq_> MapScan_Seq;
         typedef DDS_DCPSSequence_var < MapScan_Seq> MapScan_Seq_var;
         typedef DDS_DCPSSequence_out < MapScan_Seq> MapScan_Seq_out;
         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_TypeSupportInterface
         :
            virtual public DDS::TypeSupport
         { 
         public:
            typedef MapScan_TypeSupportInterface_ptr _ptr_type;
            typedef MapScan_TypeSupportInterface_var _var_type;

            static MapScan_TypeSupportInterface_ptr _duplicate (MapScan_TypeSupportInterface_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static MapScan_TypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
            static MapScan_TypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static MapScan_TypeSupportInterface_ptr _nil () { return 0; }
            static const char * _local_id;
            MapScan_TypeSupportInterface_ptr _this () { return this; }


         protected:
            MapScan_TypeSupportInterface () {};
            ~MapScan_TypeSupportInterface () {};
         private:
            MapScan_TypeSupportInterface (const MapScan_TypeSupportInterface &);
            MapScan_TypeSupportInterface & operator = (const MapScan_TypeSupportInterface &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_DataWriter
         :
            virtual public DDS::DataWriter
         { 
         public:
            typedef MapScan_DataWriter_ptr _ptr_type;
            typedef MapScan_DataWriter_var _var_type;

            static MapScan_DataWriter_ptr _duplicate (MapScan_DataWriter_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static MapScan_DataWriter_ptr _narrow (DDS::Object_ptr obj);
            static MapScan_DataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static MapScan_DataWriter_ptr _nil () { return 0; }
            static const char * _local_id;
            MapScan_DataWriter_ptr _this () { return this; }

            virtual DDS::LongLong register_instance (const MapScan_& instance_data) = 0;
            virtual DDS::LongLong register_instance_w_timestamp (const MapScan_& instance_data, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long unregister_instance (const MapScan_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long unregister_instance_w_timestamp (const MapScan_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long write (const MapScan_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long write_w_timestamp (const MapScan_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long dispose (const MapScan_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long dispose_w_timestamp (const MapScan_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long writedispose (const MapScan_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long writedispose_w_timestamp (const MapScan_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long get_key_value (MapScan_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const MapScan_& instance_data) = 0;

         protected:
            MapScan_DataWriter () {};
            ~MapScan_DataWriter () {};
         private:
            MapScan_DataWriter (const MapScan_DataWriter &);
            MapScan_DataWriter & operator = (const MapScan_DataWriter &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_DataReader
         :
            virtual public DDS::DataReader
         { 
         public:
            typedef MapScan_DataReader_ptr _ptr_type;
            typedef MapScan_DataReader_var _var_type;

            static MapScan_DataReader_ptr _duplicate (MapScan_DataReader_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static MapScan_DataReader_ptr _narrow (DDS::Object_ptr obj);
            static MapScan_DataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static MapScan_DataReader_ptr _nil () { return 0; }
            static const char * _local_id;
            MapScan_DataReader_ptr _this () { return this; }

            virtual DDS::Long read (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (MapScan_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (MapScan_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (MapScan_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const MapScan_& instance) = 0;

         protected:
            MapScan_DataReader () {};
            ~MapScan_DataReader () {};
         private:
            MapScan_DataReader (const MapScan_DataReader &);
            MapScan_DataReader & operator = (const MapScan_DataReader &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs MapScan_DataReaderView
         :
            virtual public DDS::DataReaderView
         { 
         public:
            typedef MapScan_DataReaderView_ptr _ptr_type;
            typedef MapScan_DataReaderView_var _var_type;

            static MapScan_DataReaderView_ptr _duplicate (MapScan_DataReaderView_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static MapScan_DataReaderView_ptr _narrow (DDS::Object_ptr obj);
            static MapScan_DataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static MapScan_DataReaderView_ptr _nil () { return 0; }
            static const char * _local_id;
            MapScan_DataReaderView_ptr _this () { return this; }

            virtual DDS::Long read (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (MapScan_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (MapScan_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (MapScan_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (MapScan_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const MapScan_& instance) = 0;

         protected:
            MapScan_DataReaderView () {};
            ~MapScan_DataReaderView () {};
         private:
            MapScan_DataReaderView (const MapScan_DataReaderView &);
            MapScan_DataReaderView & operator = (const MapScan_DataReaderView &);
         };

      }
   }
}




#endif
