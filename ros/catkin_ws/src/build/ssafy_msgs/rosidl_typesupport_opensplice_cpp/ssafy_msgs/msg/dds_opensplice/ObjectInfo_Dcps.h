//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: ObjectInfo_Dcps.h
//  Source: ssafy_msgs\msg\ObjectInfo_.idl
//  Generated: timestamp removed to make the build reproducible
//  OpenSplice 6.9.190403OSS
//  
//******************************************************************
#ifndef _OBJECTINFO_DCPS_H_
#define _OBJECTINFO_DCPS_H_

#include "sacpp_mapping.h"
#include "ObjectInfo_.h"
#include "dds_dcps.h"
#include "ssafy_msgs/msg/rosidl_typesupport_opensplice_cpp__visibility_control.h"


namespace ssafy_msgs
{
   namespace msg
   {
      namespace dds_
      {

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_TypeSupportInterface;

         typedef ObjectInfo_TypeSupportInterface * ObjectInfo_TypeSupportInterface_ptr;
         typedef DDS_DCPSInterface_var < ObjectInfo_TypeSupportInterface> ObjectInfo_TypeSupportInterface_var;
         typedef DDS_DCPSInterface_out < ObjectInfo_TypeSupportInterface> ObjectInfo_TypeSupportInterface_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_DataWriter;

         typedef ObjectInfo_DataWriter * ObjectInfo_DataWriter_ptr;
         typedef DDS_DCPSInterface_var < ObjectInfo_DataWriter> ObjectInfo_DataWriter_var;
         typedef DDS_DCPSInterface_out < ObjectInfo_DataWriter> ObjectInfo_DataWriter_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_DataReader;

         typedef ObjectInfo_DataReader * ObjectInfo_DataReader_ptr;
         typedef DDS_DCPSInterface_var < ObjectInfo_DataReader> ObjectInfo_DataReader_var;
         typedef DDS_DCPSInterface_out < ObjectInfo_DataReader> ObjectInfo_DataReader_out;


         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_DataReaderView;

         typedef ObjectInfo_DataReaderView * ObjectInfo_DataReaderView_ptr;
         typedef DDS_DCPSInterface_var < ObjectInfo_DataReaderView> ObjectInfo_DataReaderView_var;
         typedef DDS_DCPSInterface_out < ObjectInfo_DataReaderView> ObjectInfo_DataReaderView_out;

         struct ObjectInfo_Seq_uniq_ {};
         typedef DDS_DCPSUVLSeq < ObjectInfo_, struct ObjectInfo_Seq_uniq_> ObjectInfo_Seq;
         typedef DDS_DCPSSequence_var < ObjectInfo_Seq> ObjectInfo_Seq_var;
         typedef DDS_DCPSSequence_out < ObjectInfo_Seq> ObjectInfo_Seq_out;
         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_TypeSupportInterface
         :
            virtual public DDS::TypeSupport
         { 
         public:
            typedef ObjectInfo_TypeSupportInterface_ptr _ptr_type;
            typedef ObjectInfo_TypeSupportInterface_var _var_type;

            static ObjectInfo_TypeSupportInterface_ptr _duplicate (ObjectInfo_TypeSupportInterface_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectInfo_TypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
            static ObjectInfo_TypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectInfo_TypeSupportInterface_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectInfo_TypeSupportInterface_ptr _this () { return this; }


         protected:
            ObjectInfo_TypeSupportInterface () {};
            ~ObjectInfo_TypeSupportInterface () {};
         private:
            ObjectInfo_TypeSupportInterface (const ObjectInfo_TypeSupportInterface &);
            ObjectInfo_TypeSupportInterface & operator = (const ObjectInfo_TypeSupportInterface &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_DataWriter
         :
            virtual public DDS::DataWriter
         { 
         public:
            typedef ObjectInfo_DataWriter_ptr _ptr_type;
            typedef ObjectInfo_DataWriter_var _var_type;

            static ObjectInfo_DataWriter_ptr _duplicate (ObjectInfo_DataWriter_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectInfo_DataWriter_ptr _narrow (DDS::Object_ptr obj);
            static ObjectInfo_DataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectInfo_DataWriter_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectInfo_DataWriter_ptr _this () { return this; }

            virtual DDS::LongLong register_instance (const ObjectInfo_& instance_data) = 0;
            virtual DDS::LongLong register_instance_w_timestamp (const ObjectInfo_& instance_data, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long unregister_instance (const ObjectInfo_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long unregister_instance_w_timestamp (const ObjectInfo_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long write (const ObjectInfo_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long write_w_timestamp (const ObjectInfo_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long dispose (const ObjectInfo_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long dispose_w_timestamp (const ObjectInfo_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long writedispose (const ObjectInfo_& instance_data, DDS::LongLong handle) = 0;
            virtual DDS::Long writedispose_w_timestamp (const ObjectInfo_& instance_data, DDS::LongLong handle, const DDS::Time_t& source_timestamp) = 0;
            virtual DDS::Long get_key_value (ObjectInfo_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const ObjectInfo_& instance_data) = 0;

         protected:
            ObjectInfo_DataWriter () {};
            ~ObjectInfo_DataWriter () {};
         private:
            ObjectInfo_DataWriter (const ObjectInfo_DataWriter &);
            ObjectInfo_DataWriter & operator = (const ObjectInfo_DataWriter &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_DataReader
         :
            virtual public DDS::DataReader
         { 
         public:
            typedef ObjectInfo_DataReader_ptr _ptr_type;
            typedef ObjectInfo_DataReader_var _var_type;

            static ObjectInfo_DataReader_ptr _duplicate (ObjectInfo_DataReader_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectInfo_DataReader_ptr _narrow (DDS::Object_ptr obj);
            static ObjectInfo_DataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectInfo_DataReader_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectInfo_DataReader_ptr _this () { return this; }

            virtual DDS::Long read (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (ObjectInfo_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (ObjectInfo_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (ObjectInfo_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const ObjectInfo_& instance) = 0;

         protected:
            ObjectInfo_DataReader () {};
            ~ObjectInfo_DataReader () {};
         private:
            ObjectInfo_DataReader (const ObjectInfo_DataReader &);
            ObjectInfo_DataReader & operator = (const ObjectInfo_DataReader &);
         };

         class ROSIDL_TYPESUPPORT_OPENSPLICE_CPP_PUBLIC_ssafy_msgs ObjectInfo_DataReaderView
         :
            virtual public DDS::DataReaderView
         { 
         public:
            typedef ObjectInfo_DataReaderView_ptr _ptr_type;
            typedef ObjectInfo_DataReaderView_var _var_type;

            static ObjectInfo_DataReaderView_ptr _duplicate (ObjectInfo_DataReaderView_ptr obj);
            DDS::Boolean _local_is_a (const char * id);

            static ObjectInfo_DataReaderView_ptr _narrow (DDS::Object_ptr obj);
            static ObjectInfo_DataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
            static ObjectInfo_DataReaderView_ptr _nil () { return 0; }
            static const char * _local_id;
            ObjectInfo_DataReaderView_ptr _this () { return this; }

            virtual DDS::Long read (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long read_next_sample (ObjectInfo_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long take_next_sample (ObjectInfo_& received_data, DDS::SampleInfo& sample_info) = 0;
            virtual DDS::Long read_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long take_next_instance (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ULong sample_states, DDS::ULong view_states, DDS::ULong instance_states) = 0;
            virtual DDS::Long read_next_instance_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long take_next_instance_w_condition (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::LongLong a_handle, DDS::ReadCondition_ptr a_condition) = 0;
            virtual DDS::Long return_loan (ObjectInfo_Seq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
            virtual DDS::Long get_key_value (ObjectInfo_& key_holder, DDS::LongLong handle) = 0;
            virtual DDS::LongLong lookup_instance (const ObjectInfo_& instance) = 0;

         protected:
            ObjectInfo_DataReaderView () {};
            ~ObjectInfo_DataReaderView () {};
         private:
            ObjectInfo_DataReaderView (const ObjectInfo_DataReaderView &);
            ObjectInfo_DataReaderView & operator = (const ObjectInfo_DataReaderView &);
         };

      }
   }
}




#endif
